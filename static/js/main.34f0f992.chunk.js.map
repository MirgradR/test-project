{"version":3,"sources":["reportWebVitals.js","api/api.js","Common/sort.js","redux/todoReducer.js","Component/Table/TableElement/TableElement.jsx","Component/Table/Table.jsx","Component/TableForm/Pagination.jsx","Component/TableForm/TableForm.jsx","Component/ListTodos.jsx","redux/redux-store.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","todosApi","axios","get","data","findMinIndex","arr","direction","element","minIndex","i","length","sortR","result","push","splice","SET_TODOS","SET_COUNT_TODOS","SEARCH_TODO","SORT_TITLE","SORT_ID","SORT_PROGRESS","initialState","searchValue","countTodos","maxElements","todos","setTodosActionCreator","max","min","type","payload","filter","el","id","TableElements","sortTitle","title","includes","map","className","completed","Table","props","useState","sortId","setSortId","setSortTitle","sortProgress","setSortProgress","useEffect","getTodos","todo","onClick","e","preventDefault","TableElement","Pagination","btns","count","maxEl","changePage","target","window","removeEventListener","TableForm","onChange","searchTodo","value","name","ListTodosContainer","connect","state","dispatch","a","response","reducers","combineReducers","action","sort","b","store","createStore","applyMiddleware","thunk","App","AppContainer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34f0f992.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\"\r\n\r\nexport const todosApi = {\r\n    getTodos() {\r\n        return axios.get(`https://jsonplaceholder.typicode.com/todos`).then(data => data.data)\r\n    }\r\n} \r\n\r\n","const findMinIndex = (arr, direction, element) => {\r\n    let minIndex = 0\r\n    \r\n    for (let i = 0; i < arr.length; i++) {\r\n        if (direction) {\r\n            if (arr[i][element] < arr[minIndex][element]) {\r\n                minIndex = i\r\n            }\r\n        } else {\r\n            if (arr[i][element] > arr[minIndex][element]) {\r\n                minIndex = i\r\n            } \r\n        }\r\n    }\r\n    return minIndex\r\n}\r\nexport const sortR = (arr, direction, element) => {\r\n    let result = []\r\n    while (arr.length !== 0) {\r\n        let minIndex = findMinIndex(arr, direction, element)\r\n        result.push(arr[minIndex])\r\n        arr.splice(minIndex, 1)\r\n    }\r\n    return result\r\n}\r\n\r\n","import { todosApi } from \"../api/api\"\r\nimport { sortR } from \"../Common/sort\"\r\n\r\nconst SET_TODOS = 'SET-TODOS'\r\nconst SET_COUNT_TODOS = 'SET-COUNT-TODOS'\r\nconst SEARCH_TODO = 'SEARCH-TODO'\r\nconst SORT_TITLE = 'SORT-TITLE'\r\nconst SORT_ID = 'SORT-ID'\r\nconst SORT_PROGRESS = 'SORT-PROGRESS'\r\n\r\nconst initialState = {\r\n    searchValue: '',\r\n    countTodos: 200,\r\n    maxElements: 20,\r\n    todos: [\r\n        {\r\n            \"userId\": 1,\r\n            \"id\": 1,\r\n            \"title\": \"delectus aut autem\",\r\n            \"completed\": false\r\n        },\r\n        {\r\n            \"userId\": 1,\r\n            \"id\": 2,\r\n            \"title\": \"quis ut nam facilis et officia qui\",\r\n            \"completed\": false\r\n        },\r\n        {\r\n            \"userId\": 1,\r\n            \"id\": 3,\r\n            \"title\": \"fugiat veniam minus\",\r\n            \"completed\": false\r\n        },\r\n    ]\r\n}\r\n\r\nexport const todoReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_TODOS:\r\n            return{\r\n                ...state, todos: action.payload\r\n            }\r\n        case SET_COUNT_TODOS:\r\n            return {\r\n                ...state, countTodos: action.payload\r\n            }\r\n        case SEARCH_TODO:\r\n            return {\r\n                ...state, searchValue: action.payload\r\n            }\r\n        case SORT_ID:\r\n            return {\r\n                ...state, todos: state.todos.sort((a, b) => {\r\n                    return action.payload ? a.id - b.id : b.id - a.id\r\n                })\r\n            }\r\n        case SORT_TITLE:\r\n            return {\r\n                ...state, todos: sortR(state.todos, action.payload, 'title')\r\n            }\r\n        case SORT_PROGRESS:\r\n            return {\r\n                ...state, todos: sortR(state.todos, action.payload, 'completed')\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setTodosActionCreator = (todos, max = 20, min = 1) => {\r\n    return {\r\n        type: SET_TODOS,\r\n        payload: todos.filter(el => el.id <= max && el.id >= min)\r\n    }\r\n}\r\n\r\nconst setCountTodos = (count) => {\r\n    return {\r\n        type: SET_COUNT_TODOS,\r\n        payload: count\r\n    }\r\n}\r\n\r\nexport const searchTodoActionCreator = (value) => {\r\n    return {\r\n        type: SEARCH_TODO,\r\n        payload: value\r\n    }\r\n}\r\nexport const sortId = (direction) => {\r\n    return {\r\n        type: SORT_ID,\r\n        payload: direction\r\n    }\r\n}\r\nexport const sortTitle = (direction) => {\r\n    return {\r\n        type: SORT_TITLE,\r\n        payload: direction\r\n    }\r\n}\r\nexport const sortProgress = (direction) => {\r\n    return {\r\n        type: SORT_PROGRESS,\r\n        payload: direction\r\n    }\r\n}\r\n\r\nexport const getTodosThunkCreator = (max, min) => {\r\n    return async (dispatch) => {\r\n        const response = await todosApi.getTodos()\r\n        dispatch(setTodosActionCreator(response, max, min))\r\n        dispatch(setCountTodos(response.length))\r\n    }\r\n}\r\n","const TableElements = ({todos, searchValue, sortTitle}) => {\r\n    const renderElements = () => {\r\n        const filterTodos = todos.filter(el => { \r\n            return el.title.includes(searchValue)\r\n        })\r\n        return filterTodos.map(el => {\r\n            return (<div key = {el.id} className = {'table__element'}>\r\n                <div className = {'table__element-id'}>{el.id}</div>\r\n                <div className = {'table__element-title'}>{el.title}</div>\r\n                <div className = {'table__element-progress'}>{el.completed ? 'Completed' : 'In Process'}</div>\r\n            </div>)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {renderElements()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableElements","import TableElements from \"./TableElement/TableElement\"\r\nimport './Table.css'\r\nimport { useEffect, useState } from \"react\"\r\n\r\nconst Table = (props) => {\r\n    const [sortId, setSortId] = useState(false)\r\n    const [sortTitle, setSortTitle] = useState(false)\r\n    const [sortProgress, setSortProgress] = useState(false)\r\n\r\n    const sortIdClick = (e) => {\r\n        e.preventDefault()\r\n        setSortId(!sortId)\r\n        props.sortId(sortId)\r\n    }\r\n    const sortTitleClick = (e) => {\r\n        e.preventDefault()\r\n        setSortTitle(!sortTitle)\r\n        props.sortTitle(sortTitle)\r\n        setSortId(true)\r\n    }\r\n    const sortProgressClick = (e) => {\r\n        e.preventDefault()\r\n        setSortProgress(!sortProgress)\r\n        props.sortProgress(sortProgress)\r\n        setSortId(true)\r\n    }\r\n    useEffect(() => {\r\n        props.getTodos()\r\n    }, [props.todo])\r\n\r\n    return (\r\n        <div className={'table'}>\r\n            <div className={'table__element table-head'}>\r\n                <div onClick = {sortIdClick} className={'table__head-id'}>ID</div>\r\n                <div onClick = {sortTitleClick} className={'table__head-title'}>TITLE</div>\r\n                <div onClick = {sortProgressClick} className={'table__head-progress'}>PROGRESS</div>\r\n            </div>\r\n            <TableElements todos={props.todos} searchValue = {props.searchValue}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table","import { useEffect } from \"react\"\r\n\r\nconst Pagination = (props) => {\r\n\r\n    let btns = []\r\n    for (let i = 1; i <= props.count / props.maxEl; i++) {\r\n        btns.push(i)\r\n    }\r\n    const changePage = (e) => {\r\n        e.preventDefault()\r\n        let max = e.target.id * props.maxEl\r\n        let min = e.target.id * props.maxEl - props.maxEl\r\n        props.getTodos(max, min)   \r\n    } \r\n    useEffect(() => {\r\n        return (\r\n            window.removeEventListener('click', changePage)\r\n        )\r\n    }, [props.count, props.maxEl])\r\n    \r\n    return (\r\n        btns.map(el => {\r\n            return <button onClick = {changePage} id={el} key={el} className={'btn-pagination'}>{el}</button>\r\n        })\r\n    )\r\n}\r\nexport default Pagination","import Pagination from './Pagination'\r\nimport './TableForm.css'\r\n\r\nconst TableForm = (props) => {\r\n    \r\n    const searchTodo = (e) => {\r\n        props.searchTodo(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <form className={'search-form'}>\r\n            <input onChange = {searchTodo} className={'search-form__input'} value = {props.searchValue} name={'search'} />\r\n            <div>\r\n                <Pagination getTodos = {props.getTodos} count = {props.count} maxEl = {props.maxEl}/>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport default TableForm\r\n","import { connect } from \"react-redux\"\r\nimport { getTodosThunkCreator, searchTodoActionCreator, sortId, sortProgress, sortTitle } from \"../redux/todoReducer\"\r\nimport Table from \"./Table/Table\"\r\nimport TableForm from \"./TableForm/TableForm\"\r\n\r\nconst ListTodos = (props) => {\r\n    \r\n    return (\r\n        <> \r\n            <TableForm getTodos = {props.getTodos} searchTodo = {props.searchTodo} searchValue = {props.todos.searchValue} count = {props.todos.countTodos} maxEl = {props.todos.maxElements}/>\r\n            <Table todos={props.todos.todos} getTodos = {props.getTodos} searchValue = {props.todos.searchValue} sortId = {props.sortId} sortTitle = {props.sortTitle} sortProgress = {props.sortProgress}/>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todos: state.todos\r\n    }\r\n}\r\n\r\nconst ListTodosContainer = connect(mapStateToProps, {getTodos: getTodosThunkCreator, searchTodo: searchTodoActionCreator, sortTitle: sortTitle, sortId: sortId, sortProgress: sortProgress}) (ListTodos)\r\n\r\nexport default ListTodosContainer","import { applyMiddleware, createStore } from 'redux'\r\nimport { combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { todoReducer } from './todoReducer'\r\n\r\nlet reducers = combineReducers({\r\n    todos: todoReducer\r\n})\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunk))\r\n\r\nwindow.store = store\r\n\r\nexport default store","import { Provider } from 'react-redux';\nimport './App.css';\nimport ListTodosContainer from './Component/ListTodos';\nimport store from './redux/redux-store';\n\nfunction App() {\n  return (\n    <div className = {'app'}>\n      <ListTodosContainer />\n    </div>\n  );\n}\n\nconst AppContainer = () => {\n  return (\n    <Provider store = {store}>\n      <App />\n    </Provider>\n  )\n}\n\nexport default AppContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport AppContainer from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppContainer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}